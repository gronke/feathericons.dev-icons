@use "sass:math";

@use "tailwind-colors-vars" as *;

*:where(:not(html,iframe,canvas,img,svg,video,audio):not(svg *,symbol *)){all:unset;display:revert}*,*:before,*:after{box-sizing:border-box}a,button{cursor:revert}ol,ul,menu{list-style:none}img{max-inline-size:100%;max-block-size:100%}table{border-collapse:collapse}input,textarea{-webkit-user-select:auto}textarea{white-space:revert}meter{-webkit-appearance:revert;appearance:revert}:where(pre){all:revert}::placeholder{color:unset}::marker{content:initial}:where([hidden]){display:none}:where([contenteditable]:not([contenteditable="false"])){-moz-user-modify:read-write;-webkit-user-modify:read-write;overflow-wrap:break-word;-webkit-line-break:after-white-space;-webkit-user-select:auto}:where([draggable="true"]){-webkit-user-drag:element}:where(dialog:modal){all:revert}
#root { display: flex; }

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Vars

$sans:
	Inter,
	system-ui,
	'Segoe UI',
	Roboto,
	Helvetica,
	Arial,
	sans-serif,
	'Apple Color Emoji',
	'Segoe UI Emoji';

$code:
	'Recursive Monospace',
	ui-monospace,
	SFMono-Regular,
	Consolas,
	'Liberation Mono',
	Menlo,
	monospace;

$WINDOWS_SCROLLBAR_WIDTH: 16px;

$main-margin-y:     32px;
$main-margin-x:     64px;
$main-spacing:      32px;
$main-margin:       $main-margin-y $main-margin-x;

$aside-margin-y:    32px;
$aside-margin-x:    16px;
$aside-spacing:     16px;
$aside-margin:      $aside-margin-y $aside-margin-x;

$aside-1-width:     320px + $WINDOWS_SCROLLBAR_WIDTH;
$aside-2-width:     400px;

$form-height:       40px;
$form-icon-height:  18px;

$form-keyline:      ($form-height - $form-icon-height) / 2;

@function dynamic-keyline($size) {
	@return ($form-height - $size) / 2;
}

$hairline-color:          $slate-300;
$inset-hairline-shadow:   inset  0    0   0 1px $hairline-color;
$inset-hairline-t-shadow: inset  0   -1px 0 0   $hairline-color;
$inset-hairline-r-shadow: inset  1px  0   0 0   $hairline-color;
$inset-hairline-b-shadow: inset  0    1px 0 0   $hairline-color;
$inset-hairline-l-shadow: inset -1px  0   0 0   $hairline-color;
$hairline-shadow:                0    0   0 1px $hairline-color;
$hairline-t-shadow:              0   -1px 0 0   $hairline-color;
$hairline-r-shadow:              1px  0   0 0   $hairline-color;
$hairline-b-shadow:              0    1px 0 0   $hairline-color;
$hairline-l-shadow:             -1px  0   0 0   $hairline-color;

$realistic-shadow:
	0  1px  2px  -1px $hairline-color,
	0  2px  4px  -2px $hairline-color,
	0  4px  8px  -4px $hairline-color,
	0  8px 16px  -8px $hairline-color,
	0 16px 32px -16px $hairline-color,
	0 32px 64px -32px $hairline-color;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Typography

:root { -webkit-font-smoothing:  antialiased; -moz-osx-font-smoothing: grayscale; }

@mixin typography-sans($color: null) {
  font-weight:      400;
  font-size:        15px;
  font-family:      $sans;
  text-transform:   none;
  letter-spacing:   normal;
  color:            if($color != null, $color, $slate-800);
	&.is-multiline { line-height: 1.625; }
}
@mixin typography-small-sans($color: null) {
  font-weight:      400;
  font-size:        12px;
  font-family:      $sans;
  text-transform:   none;
  letter-spacing:   normal;
  color:            if($color != null, $color, $slate-600);
	&.is-multiline { line-height: 1.625; }
}
@mixin typography-caps($color: null) {
  font-weight:      500;
  font-size:        10px;
  font-family:      $sans;
  text-transform:   uppercase;
  letter-spacing:   0.1em;
  color:            if($color != null, $color, $slate-800);
	&.is-multiline { line-height: 1.625; }
}
@mixin typography-code($color: null) {
  font-weight:      400;
  font-size:        11px;
  font-family:      $code;
  text-transform:   none;
  letter-spacing:   normal;
  color:            if($color != null, $color, $slate-600);
	&.is-multiline { line-height: 1.625; }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// HTML5 checkbox

$checkbox-height:   24px;
$checkbox-check-height: 12px;
$checkbox-transition-duration: 50ms;

@function checkmark-svg($stroke-width: 2, $color: currentColor) {
	@return url("data:image/svg+xml," +
		"%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='feather feather-check' fill='none' stroke='#{$color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='#{$stroke-width}'%3E" +
			"%3Cpolyline points='20 6 9 17 4 12' /%3E" +
		"%3C/svg%3E" +
	"%0A");
}

input[type=checkbox] {
	position:         relative;
	height:           $checkbox-height;
	width:            $checkbox-height;
	background-color: white;
	border-radius:    43.75%;
	box-shadow:       $hairline-shadow, $realistic-shadow;
	cursor:           pointer;
	user-select:      none;
}
input[type=checkbox]:checked { box-shadow: $realistic-shadow; }
input[type=checkbox]::before {
	content:          "";
	position:         absolute;
	inset:            0;
	background-color: dodgerblue;
	border-radius:    inherit;
	transform:        scale(0);
	opacity:          0;
	transition:
		transform $checkbox-transition-duration cubic-bezier(0, 1, 0.5, 1.25),
		opacity   $checkbox-transition-duration cubic-bezier(0, 1, 0.5, 1.25);
}
// Note: input[type=checkbox]:checked:is(::before, ::after) doesn't work
input[type=checkbox]:checked::before {
	transform:        scale(1);
	opacity:          1;
}
input[type=checkbox]::after {
	content:          "";
	position:         absolute;
	inset:            0;
	margin:           auto;
	height:           $checkbox-check-height;
	width:            $checkbox-check-height;
	background:       checkmark-svg($stroke-width: 8, $color: white) 0% 0% / 100% 100%;
	transform:        scale(0);
	opacity:          0;
	transition:
		transform $checkbox-transition-duration * 2 cubic-bezier(0, 1, 0.5, 1.25),
		opacity   $checkbox-transition-duration * 2 cubic-bezier(0, 1, 0.5, 1.25);
}
// Note: input[type=checkbox]:checked:is(::before, ::after) doesn't work
input[type=checkbox]:checked::after {
	transform:        scale(1);
	opacity:          1;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// HTML5 range

$slider-track-height: 6px;
$slider-thumb-height: 32px;

$slider-intrinsic-margin-y: ($slider-thumb-height - $slider-track-height) / 2;

// CSS resets
input[type=range]::-webkit-slider-thumb { -webkit-appearance: none; box-shadow: none; /* iOS */ }
input[type=range]::-moz-range-thumb { border: none; }

input[type=range] {
	margin:           $slider-intrinsic-margin-y 0;
  height:           $slider-track-height;
  background-color: dodgerblue;
	border-radius:    1e3px;
	cursor:           grab;
	user-select:      none;
	&:hover:active { cursor: grabbing; }
}
// Must be styled separately
input[type=range]::-webkit-slider-thumb {
  height:           $slider-thumb-height;
  width:            $slider-thumb-height;
  background-color: white;
  border-radius:    1e3px;
	box-shadow:       $hairline-shadow, $realistic-shadow;
}
// Must be styled separately
input[type=range]::-moz-range-thumb {
  height:           $slider-thumb-height;
  width:            $slider-thumb-height;
  background-color: white;
  border-radius:    1e3px;
	box-shadow:       $hairline-shadow, $realistic-shadow;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Layout

.aside-1 {
	display:          flex;
	flex-direction:   column;
	height:           100vh; // Fallback
	height:           100dvh;
	width:            $aside-1-width;
	background-color: white;
	box-shadow:       $hairline-r-shadow;
}
.main {
	flex:             1;
	margin:           $main-margin;
}
.aside-2 {
	display:          flex;
	flex-direction:   column;
	height:           100vh; // Fallback
	height:           100dvh;
	width:            $aside-2-width;
	background-color: white;
	box-shadow:       $hairline-l-shadow;
}
.sticky-container {
	position:         sticky;
	top:              0;
	z-index:          10;
	background-color: white;
	&:has(+ .scroll-container[data-state-did-scroll=true]) { box-shadow: $hairline-b-shadow; }
}
.scroll-container {
	flex:             1;
	display:          flex;
	flex-direction:   column;
	overflow-y:       scroll;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Search bar

.search-bar {
	margin:
		$aside-margin-y                      // Y-axis
		$aside-margin-x + $form-keyline / 2; // X-axis
	margin-bottom:    $aside-spacing;
	display:          flex;
	height:           $form-height;
	background-color: $slate-200;
	border-radius:    1e3px;
	&:is(:hover, :has(:focus-within)) { background-color: white; box-shadow: $inset-hairline-shadow }
}
// LHS
.search-bar-icon {
	margin:           dynamic-keyline(16px);
	height:           16px;
	width:            16px;
	color:            $slate-400;
}
// RHS
.search-bar input[type=text] {
	@include          typography-sans;
	flex:             1;
	&::placeholder { color: $slate-500; }
	&:focus-visible::placeholder { opacity: 0; }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Fieldset, hairline

.fieldset {
	margin:           $aside-spacing $aside-margin-x;
	display:          flex;
	flex-direction:   column;
	gap:              16px;
	&:last-child { margin-bottom: $aside-margin-y; }
}
.hairline {
	margin-top:       -1px;                      // 😎
	border-top:       1px solid $hairline-color; // 😎
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Checkboxes

.checkboxes {
	display:          flex;
	flex-direction:   column;
	gap:              16px;
}

// Space children (x-axis)
.checkbox-list .checkbox-list { margin-left: $form-height / 2; }

.checkbox-item {
	margin:           -8px 0;
	display:          flex;
	align-items:      center;
	height:           $form-height;
	border-radius:    1e3px;
	&:hover { background-color: $gray-100; }
	&:hover:active { background-color: $gray-200; }

	// Interaction styles
	cursor:           pointer;
	user-select:      none;
}

// LHS
.checkbox-icon {
	margin:           $form-keyline;
	height:           $form-icon-height;
	width:            $form-icon-height;
	color:            $slate-800;
}
// RHS
.checkbox-name {
	@include          typography-sans;
	flex:             1;
}
.checkbox-item input[type=checkbox] { margin: dynamic-keyline($checkbox-height); }

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Legend

$legend-undo-height: 16px;

.legend {
	float:            left; // Because of <legend> :(
	display:          flex;
	justify-content:  space-between;
	align-items:      center;
	height:           16px;
}
// LHS
.legend-name {
	@include          typography-caps;
	flex:             1;
	margin:           0 $form-keyline;
}
// RHS
.legend-undo {
	margin:           dynamic-keyline($legend-undo-height);
	height:           $legend-undo-height;
	width:            $legend-undo-height;
	color:            $slate-300;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Slider

.slider {
	display:          flex;
	align-items:      center;
}
// LHS
.slider input[type=range] {
	flex:             1;
	margin-left:      $form-keyline;
}
// RHS
.slider input[type=text] {
	@include          typography-code;
	margin:           0 $form-keyline;
	height:           24px;
	width:            56px;
	border-radius:    1e3px;
	box-shadow:       $inset-hairline-shadow;
	text-align:       center;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// Licenses

.licenses {
	display:          flex;
	flex-direction:   column;
	gap:              8px;
}
.license { display: flex; }
.license-icon {
	margin:           dynamic-keyline(14px);
	margin-top:       0;
	height:           14px;
	width:            14px;
	color:            $slate-800;
}
.license-text { @include typography-small-sans; }

.license-text a {
	text-decoration:  underline $slate-300;
	text-underline-offset: 2px;
}
.license-text em { font-style: italic; }
