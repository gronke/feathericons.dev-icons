@use "sass:math"

$sidebar-1-width:     320px
$sidebar-1-max-width: $sidebar-1-width * 1.5

$sidebar-2-width:     320px
$sidebar-2-max-width: $sidebar-2-width * 1.5

$sidebar-min-z-index: 50
$sidebar-max-z-index: 100

// Safe CSS variables
$sidebar-x:         var(--__x)
$sidebar-min-width: var(--__min-width)
$sidebar-max-width: var(--__max-width)

.sidebar
  position: fixed
  &[data-pos=a]
    inset: 0 auto 0 0
  &[data-pos=b]
    inset: 0 0 0 auto

  &:not(:is([data-state=maximized], [data-transition]))
    z-index: $sidebar-min-z-index
  &:is([data-state=maximized], [data-transition])
    z-index: $sidebar-max-z-index

  display: flex          // Forward height
  flex-direction: row    // Forward height

  // Start
  &[data-pos=a]
    transform: translateX(calc(-1 * ($sidebar-max-width - $sidebar-min-width) + $sidebar-x))
  &[data-pos=a][data-state=maximized]
    transform: translateX($sidebar-x)
  &[data-pos=a][data-state=minimized]
    transform: translateX(calc(-1 * $sidebar-max-width + $sidebar-x))

  // End
  &[data-pos=b]
    transform: translateX(calc($sidebar-max-width - $sidebar-min-width + $sidebar-x))
  &[data-pos=b][data-state=maximized]
    transform: translateX($sidebar-x)
  &[data-pos=b][data-state=minimized]
    transform: translateX(calc($sidebar-max-width + $sidebar-x))

.sidebar[data-transition]
  transition: transform 600ms cubic-bezier(0, 1, 0.25, 1)

////////////////////////////////////////////////////////////////////////////////

.sidebar-drag-area
  position: absolute
  .sidebar[data-pos=a] &
    inset: 0 auto 0 100%
  .sidebar[data-pos=b] &
    inset: 0 100% 0 auto
  display: flex
  justify-content: center
  align-items: center
  width: 32px
  &:not(:hover:active)
    cursor: grab
  &:hover:active
    cursor: grabbing
  -webkit-user-select: none
  user-select: none

.sidebar-drag-area-handle
  height: 6px * 8
  width: 6px
  background-color: hsl(0, 0%, 0%, 0.25)
  border-radius: 1e3px

////////////////////////////////////////////////////////////////////////////////

.sidebar-card
  display: flex
  .sidebar[data-pos=a] &
    justify-content: flex-end
  .sidebar[data-pos=b] &
    justify-content: flex-start
  width: $sidebar-max-width
  background-color: white
  box-shadow: 0 0 0 1px hsl(0, 0%, 0%, 0.1)
.sidebar-card-content
  display: flex          // Forward height
  flex-direction: column // Forward height
  width: $sidebar-min-width

////////////////////////////////////////////////////////////////////////////////

.sidebar-header
  position: sticky
  top: 0
  background-color: white
.sidebar-scroll-area
  overflow-y: auto
.sidebar-footer
  position: sticky
  bottom: 0
  z-index: 20
  margin-top: auto
  background-color: white

////////////////////////////////////////////////////////////////////////////////

.sidebar-overlay
  position: fixed
  inset: 0
  z-index: math.div($sidebar-min-z-index + $sidebar-max-z-index, 2)
  background-color: hsl(0, 0%, 0%, 0.25)
  //// backdrop-filter: blur(1px)
  &:not([data-open])
    opacity: 0
    cursor: null
    pointer-events: none
  &[data-open]
    opacity: 1
    cursor: pointer
    pointer-events: null

  transition: opacity 600ms cubic-bezier(0, 1, 0.25, 1)

////////////////////////////////////////////////////////////////////////////////

$left:  var(--__left)
$right: var(--__right)

.main
  --__left:  #{$sidebar-1-width}
  --__right: #{$sidebar-2-width}
  position: absolute
  inset: 0 $right auto $left
  //// padding: $sidebar-padding-y $sidebar-padding-x * 2
  //// padding: $sidebar-padding-y $drag-area-width + $sidebar-padding-x
  //// // TODO
  .sidebar[data-pos=a][data-state=minimized] ~ &
    --__left:  0
  .sidebar[data-pos=b][data-state=minimized] ~ &
    --__right: 0
    //// --right: #{$drag-area-width}
